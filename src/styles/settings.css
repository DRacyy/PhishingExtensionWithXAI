/* CSS Variables for theming */
:root {
  --primary-purple: #7c3aed;
  --primary-indigo: #4f46e5;
  --success-green: #10b981;
  --warning-orange: #f59e0b;
  --danger-red: #ef4444;
  --info-blue: #3b82f6;
}

/* Light theme variables */
.light {
  --bg-gradient: linear-gradient(135deg, #7c3aed 0%, #8b5cf6 50%, #4f46e5 100%);
  --bg-primary: #ffffff;
  --bg-secondary: #f8fafc;
  --bg-card: rgba(255, 255, 255, 0.95);
  --text-primary: #1f2937;
  --text-secondary: #6b7280;
  --text-muted: #9ca3af;
  --border-color: #e5e7eb;
  --border-hover: #d1d5db;
  --shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
}

/* Dark theme variables */
.dark {
  --bg-gradient: linear-gradient(135deg, #1f2937 0%, #7c3aed 50%, #4f46e5 100%);
  --bg-primary: #111827;
  --bg-secondary: #1f2937;
  --bg-card: rgba(31, 41, 55, 0.95);
  --text-primary: #f9fafb;
  --text-secondary: #d1d5db;
  --text-muted: #9ca3af;
  --border-color: #374151;
  --border-hover: #4b5563;
  --shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.5);
}

/* Base styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", sans-serif;
  line-height: 1.6;
  transition: all 0.3s ease;
  min-width: auto; /* Adjusted from old CSS */
  width: 100%; /* Added */
}

.app {
    min-height: 100vh;
  background: var(--bg-gradient);
  transition: all 0.3s ease;
  display: flex; /* Added to match old body style */
  flex-direction: column; /* Added to match old body style */
  overflow-x: hidden; /* Added to match old body style */
  width: 100%; /* Added */
}

/* Header styles */
.header {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border-bottom: 1px solid rgba(255, 255, 255, 0.2);
  padding: 1rem 2rem; /* Added padding to match history.css */
}

.header-container {
  max-width: 1200px; /* Changed from 1280px to match history.css */
  margin: 0 auto;
  padding: 0; /* Removed padding, as it's now on .header */
}

.header-content {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.logo-section {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.logo-wrapper {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.logo {
  width: 2rem;
  height: 2rem;
  align-items: center;
  justify-content: center;
}

.logo-text {
  font-size: 1.25rem;
  font-weight: 600;
  color: white;
}

.header-actions {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.nav {
    display: flex;
  gap: 0.25rem;
}

.nav-button {
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  font-size: 0.875rem;
  font-weight: 500;
  background: none;
  border: none;
  color: rgba(255, 255, 255, 0.7);
  cursor: pointer;
  transition: all 0.2s ease;
  text-decoration: none; /* Added for anchor tag compatibility */
}

.nav-button:hover {
  color: white;
  background: rgba(255, 255, 255, 0.1);
}

.nav-button.active {
  background: rgba(255, 255, 255, 0.2);
  color: white;
}

.theme-toggle {
  padding: 0.5rem;
  border-radius: 0.5rem;
  background: none;
  border: none;
  color: rgba(255, 255, 255, 0.7);
  cursor: pointer;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.theme-toggle:hover {
  color: white;
  background: rgba(255, 255, 255, 0.1);
}

/* Tab content */
.tab-content {
  display: none;
}

.tab-content.active {
  display: block;
}

/* Main content */
.main-content {
  width: 100%; /* Ensure it tries to take full width */
  max-width: 1200px; 
  margin: 0 auto;
  padding: 2rem; 
    overflow-y: auto;
  background-color: transparent; 
}

.settings-container,
.history-container {
  display: flex;
  flex-direction: column;
  gap: 2rem;
  width: 100%;
}

/* Card styles */
.card {
  background: var(--bg-card);
  backdrop-filter: blur(10px);
  border-radius: 1rem;
  box-shadow: var(--shadow);
  border: 1px solid var(--border-color);
  transition: all 0.3s ease;
  margin-bottom: 0;
  padding: 0;
}

.card-header {
  padding: 1.5rem 1.5rem 1rem;
}

.card-content {
  padding: 0 1.5rem 1.5rem;
}

.section-title {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.title {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--text-primary);
  display: flex;
  align-items: center;
  gap: 0.75rem;
    margin-top: 0;
  margin-bottom: 0;
}

.title-icon {
  color: var(--primary-purple);
}

.title-icon.green {
  color: var(--success-green);
}

.subtitle {
  font-size: 0.875rem;
  color: var(--text-secondary);
  margin-top: 0.25rem;
  line-height: 1.5;
}

/* Icon wrapper */
.icon-wrapper {
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 0.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
}

.icon-wrapper.purple {
  background: linear-gradient(135deg, var(--primary-purple), var(--primary-indigo));
    color: white;
}

.icon-wrapper.blue {
  background: rgba(59, 130, 246, 0.1);
  color: var(--info-blue);
}

.dark .icon-wrapper.blue {
  background: rgba(59, 130, 246, 0.2);
}

.icon-wrapper.red {
  background: rgba(239, 68, 68, 0.1);
  color: var(--danger-red);
}

.dark .icon-wrapper.red {
  background: rgba(239, 68, 68, 0.2);
}

.icon-wrapper.green {
  background: rgba(16, 185, 129, 0.1);
  color: var(--success-green);
}

.dark .icon-wrapper.green {
  background: rgba(16, 185, 129, 0.2);
}

.icon-wrapper.orange {
  background: rgba(245, 158, 11, 0.1);
  color: var(--warning-orange);
}

.dark .icon-wrapper.orange {
  background: rgba(245, 158, 11, 0.2);
}

/* Status badge for logged in user */
.status-badge {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1rem;
  border-radius: 0.5rem;
  border: 1px solid;
  margin-bottom: 1rem;
}

.status-badge.success {
  background: rgba(16, 185, 129, 0.1);
  border-color: rgba(16, 185, 129, 0.3);
}

.dark .status-badge.success {
  background: rgba(16, 185, 129, 0.2);
  border-color: rgba(16, 185, 129, 0.4);
}

.badge {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.25rem 0.75rem;
  border-radius: 0.375rem;
  font-size: 0.875rem;
  font-weight: 500;
  background: rgba(16, 185, 129, 0.2);
  color: var(--success-green);
  border: 1px solid rgba(16, 185, 129, 0.3);
}

.dark .badge {
  background: rgba(16, 185, 129, 0.3);
  color: #a7f3d0;
  border-color: rgba(16, 185, 129, 0.5);
}

.status-dot {
  width: 0.5rem;
  height: 0.5rem;
  background: var(--success-green);
  border-radius: 50%;
}

.email {
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--text-primary);
}

/* Info grid for sync status */
.info-grid {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  margin: 1.5rem 0;
}

.info-row {
  display: flex;
  justify-content: space-between;
  font-size: 0.875rem;
}

.label {
  color: var(--text-secondary);
}

.value {
  color: var(--text-primary);
    font-weight: 500;
}

.value.success {
  color: var(--success-green);
}

/* Buttons */
.button-group {
  display: flex;
  gap: 0.75rem;
  margin-top: 1rem;
}

.button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  border-radius: 0.375rem;
  font-size: 0.875rem;
  font-weight: 500;
  border: 1px solid;
  cursor: pointer;
  transition: all 0.2s ease;
  background: none;
}

.button.secondary {
  border-color: var(--border-color);
  color: var(--text-primary);
  background-color: var(--bg-primary);
}

.button.secondary:hover {
  background: var(--bg-secondary);
  border-color: var(--border-hover);
}

.button.danger {
  border-color: rgba(239, 68, 68, 0.3);
  color: var(--danger-red);
  background-color: var(--bg-primary);
}

.button.danger:hover {
  background: rgba(239, 68, 68, 0.1);
}

.button.ghost {
  border: none;
  color: var(--text-secondary);
}

.button.ghost:hover {
  background: var(--bg-secondary);
}

.button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* Feature list (replaces old .feature-item structure) */
.feature-list {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.feature-item {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1rem;
  border-radius: 0.5rem;
  border: 1px solid var(--border-color);
  transition: all 0.2s ease;
}

.feature-item:hover {
  background: var(--bg-secondary);
}

.feature-info {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.feature-title {
  font-weight: 500;
  color: var(--text-primary);
  margin-bottom: 0.25rem;
  font-size: 1rem;
}

.feature-description {
  font-size: 0.875rem;
  color: var(--text-secondary);
    margin: 0;
}

/* Switch component (replaces old .toggle) */
.switch {
    position: relative;
    display: inline-block;
  width: 44px;
  height: 24px;
  margin-left: 1rem;
}

.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  background-color: #ccc;
  transition: 0.3s;
  border-radius: 24px;
}

.slider:before {
    position: absolute;
    content: "";
  height: 18px;
  width: 18px;
  left: 3px;
  bottom: 3px;
    background-color: white;
  transition: 0.3s;
    border-radius: 50%;
}

input:checked + .slider {
  background-color: var(--primary-purple);
}

input:checked + .slider:before {
    transform: translateX(20px);
}

/* Checkbox styles (replaces old .checkbox-item) */
.checkbox-group {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.checkbox-item {
    display: flex;
    align-items: center;
  gap: 0.75rem;
  cursor: pointer;
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--text-primary);
  padding-left: 0;
    margin-bottom: 0;
}

.checkbox-item input[type="checkbox"] {
  display: none;
}

.checkmark {
  width: 1rem;
  height: 1rem;
  border: 2px solid var(--border-color);
  border-radius: 0.25rem;
  position: relative;
  transition: all 0.2s ease;
}

.checkbox-item input[type="checkbox"]:checked + .checkmark {
  background: var(--primary-purple);
  border-color: var(--primary-purple);
}

.checkbox-item input[type="checkbox"]:checked + .checkmark:after {
  content: "✓";
  position: absolute;
  color: white;
  font-size: 0.75rem;
  top: -2px;
  left: 1px;
}

/* Form styles (replaces old .input-group, .text-input, .whitelist-area) */
.form-group {
    display: flex;
  flex-direction: column;
  gap: 0.5rem;
  margin-bottom: 1.5rem;
  max-width: none;
}

.form-group:last-child {
  margin-bottom: 0;
}

.form-label {
  font-size: 0.875rem;
    font-weight: 500;
  color: var(--text-primary);
  display: flex;
  align-items: center;
  gap: 0.5rem;
    margin-bottom: 0;
}

.form-input,
.form-textarea {
  padding: 0.75rem;
  border: 1px solid var(--border-color);
  border-radius: 0.375rem;
  font-size: 0.875rem;
  color: var(--text-primary);
  background: var(--bg-primary);
  transition: all 0.2s ease;
    width: 100%;
    box-sizing: border-box;
}

.form-textarea {
    height: auto;
    font-family: "Monaco", "Menlo", "Ubuntu Mono", monospace;
    resize: vertical;
}

.form-input:focus,
.form-textarea:focus {
    outline: none;
  border-color: var(--primary-purple);
  box-shadow: 0 0 0 3px rgba(124, 58, 237, 0.1);
}

.monospace {
  font-family: "Monaco", "Menlo", "Ubuntu Mono", monospace;
}

.form-help {
  font-size: 0.75rem;
  color: var(--text-muted);
  margin-top: 0.25rem;
}

/* Toast notification from old CSS - ensure it works with new theme */
.toast {
    position: fixed;
    bottom: 24px;
    left: 50%;
    transform: translateX(-50%);
    background-color: var(--success-green);
    color: white;
    padding: 12px 24px;
    border-radius: 0.375rem;
    box-shadow: var(--shadow);
    z-index: 1000;
    font-size: 0.875rem;
    animation: fadeInOut 3s ease-in-out;
}

.toast.toast-error {
    background-color: var(--danger-red);
}

@keyframes fadeInOut {
    0% { opacity: 0; transform: translate(-50%, 10px); }
    10% { opacity: 1; transform: translate(-50%, 0); }
    90% { opacity: 1; transform: translate(-50%, 0); }
    100% { opacity: 0; transform: translate(-50%, 10px); }
}

/* Responsive design - from new styles, may need merging with old @media */
@media (max-width: 768px) {
  .header-content {
    /* flex-direction: column;
    height: auto;
    padding: 1rem 0;
    gap: 1rem; */
  }

  .main-content {
      padding: 1rem;
  }

  .settings-container {
      gap: 1.5rem;
  }

  .card-header {
      padding: 1rem 1rem 0.75rem;
  }
  .card-content {
      padding: 0 1rem 1rem;
  }

  .title {
      font-size: 1.125rem;
  }

  .subtitle {
      font-size: 0.8rem;
  }
  
  .button-group {
    flex-direction: column;
  }

  .feature-item {
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }
  .switch {
      margin-left: 0;
      margin-top: 0.5rem;
  }

  .form-group {
      margin-bottom: 1rem;
  }
}

/* Dark Theme Overrides for specific elements that might not be covered by vars */
.dark .button.secondary {
  background-color: var(--bg-primary);
  border-color: var(--border-color);
  color: var(--text-primary);
}

.dark .button.secondary:hover {
  background: var(--bg-secondary);
  border-color: var(--border-hover);
}

.dark .button.danger {
  background-color: var(--bg-primary);
  border-color: var(--border-color);
}

.dark .button.danger:hover {
  background: rgba(239, 68, 68, 0.2);
}

/* Rotating icon for sync button from old JS, now in CSS */
.rotating {
  animation: rotate 1s linear infinite;
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

#syncNowBtn,
#settingsLogoutBtn {
    height: 40px;
}

/* Styles for Save Changes Popup and Dialog */
@keyframes slideUp {
    from {
        opacity: 0;
        transform: translateY(50px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes slideDown {
    from {
        opacity: 1;
        transform: translateY(0);
    }
    to {
        opacity: 0;
        transform: translateY(50px);
    }
}

.animate-slide-up {
    animation: slideUp 0.3s ease-out forwards;
}

.animate-slide-down {
    animation: slideDown 0.3s ease-out forwards;
}

.save-popup {
    display: none; /* Initially hidden */
}

.save-popup.show {
    display: block; /* Made visible by adding 'show' class via JS */
}

.dialog-overlay {
    background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent black background */
    position: fixed;
    inset: 0;
    z-index: 40; /* Below dialog, above other content */
    display: none; /* Initially hidden */
}

.dialog {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); /* Center the dialog */
    z-index: 50; /* Above overlay */
    display: none; /* Initially hidden */
    /* Tailwind classes like bg-slate-900, border, rounded-lg, shadow-xl, w-full, max-w-lg 
       are expected to be in the HTML for the dialog element itself for detailed styling. 
       This CSS block focuses on positioning, visibility, and overlay. */
}

.dialog.show, .dialog-overlay.show {
    display: block; /* Made visible by adding 'show' class via JS */
}

.spinner {
    border: 2px solid rgba(255, 255, 255, 0.3); /* Light semi-transparent border */
    border-top-color: white; /* Solid white top border to create the spinning effect */
    border-radius: 50%;      /* Makes it a circle */
    width: 0.75rem;           /* Size */
    height: 0.75rem;          /* Size */
    animation: spin 1s linear infinite; /* Applies the spin animation */
}

@keyframes spin {
    to {
        transform: rotate(360deg); /* Rotates it 360 degrees */
    }
}
/* End of Styles for Save Changes Popup and Dialog */